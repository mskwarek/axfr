	SZYFRATOR
------------------------------------------------------------------------------
	Autor modyfikacji: Józef Marek
	
	Aplikacja została zrealizowana przy użyciu środowiska bioweb wykonanego przez dr. R. Nowaka
	http://bioweb.sourceforge.net/en/index.html
------------------------------------------------------------------------------

OPIS DZIAŁANIA
------------------------------------------------------------------------------
Aplikacja pozwala na szyfrowanie i rozszyfrowywanie tekstu za pomocą zmodyfikowanego szyfru 'cezara'.
Szyfr - liczba stosowany jest cyklicznie do zwiększania (szyfrowanie) lub obniżania (rozszyfrowywanie) wartości znaków.

Aplikacja wykorzystuje Python(django) + C++(boost) + JavaScript (angularJS)


INSTALACJA
------------------------------------------------------------------------------
Do uruchomienia wymagane są: python, serwer internetowy lighttpd oraz django.

1)Dla Ubuntu i Debiana:
	Aby móc używać aplikacji będziesz potrzebował uruchomić następujące polecenie instalacji:
		sudo apt-get install lighttpd python-django
	Jeśli nadal będą zgłaszane błędy, należy zaopatrzyć się dodatkowo w paczkę:
		sudo apt-get install libboost-python-dev
			UWAGA!
			Plik coder.so jest skompilowany dla 64 bit linuksa. Jeśli używasz innego systemu operacyjnego, musisz przebudować aplikację poleceniem scons
	Jeśli nadal program wyrzucałby błędy kieruj się zgodnie z instrukcją środowska bioweb w pliku OPTIONAL_ENV_SETUP.
2)Dla Windowsa
	Kieruj się zgodnie z instrukcją środowska bioweb zawartą w pliku OPTIONAL_ENV_SETUP.

TESTOWANIE WOŁANIA BIBLIOTEKI PYTHON
------------------------------------------------------------------------------
Przejdź do katalogu build_web/coderpy
i uruchom interpreter python i wpisz
	>import coder
	>print coder.runCoder("slowo", 13123);
		gdzie 13123 to jakiś kod
	Podobnie aby rozszyfrować tekst
	>print coder.runDeoder("slowo", 13123);

TESTOWANIE SERWISU INTERNETOWEGO
------------------------------------------------------------------------------
Aby uruchomić serwer ręcznie wywołaj komendę
	python build_web/manage.py runserver WEB_CLIENT_HOST:WEB_CLIENT_PORT
na przykład
	python build_web/manage.py runserver 127.0.0.1:8000
		(pod linuksem mogą być wymagane uprawnienia administratora (sudo)
	W ulubionej przeglądarce wejdź na stronę o adresie WEB_CLIENT_HOST:WEB_CLIENT_PORT (w przypadku przykładu 127.0.0.1:8000)
Sama aplikacja zawiera się w katalogu "build_web". Można ją stosować wyrzucając pozostałe katalogi poza "client".
Jednak w celu modyfikacji wszystkie katalogi są potrzebne.
Należy wtedy zmieniać w nich kod, a po wykonaniu programu scons, katalog "build_web" zostanie zaktualizowany.
